?> $response) { echo "Keyword: $keyword, Response: $response" . PHP_EOL; } echo PHP_EOL . "\nPESAN :" . PHP_EOL; echo "EDIT KATA-KATA DIATAS PADA FILE keyword.php" . PHP_EOL; while (true) { checkMessage(); sleep(3); } } elseif ($menuSelect == 3) { echo "" . PHP_EOL; while (true) { GetMessage(); sleep(3); } } elseif ($menuSelect == 4) { echo PHP_EOL . 'AUTO SHOW VOUCHER + GET SALES SESUAI PILIHANMU' . PHP_EOL; echo "MASUKKAN DELAY PILIHANMU" . PHP_EOL; $jedaShowocSales = readline("DETIK *(1-10000) => "); $tambahDetik = $jedaShowocSales + 45; echo PHP_EOL . 'AUTO SHOW VOUCHER + GET SALES SETIAP *RANDOM (' . $jedaShowocSales . ' - ' . $tambahDetik . ' DETIK)' . PHP_EOL; while (true) { getVoucData(); getSales(); randomSleep($jedaShowocSales, $tambahDetik); } } elseif ($menuSelect == 5) { echo PHP_EOL . 'ATUR DELAY SHOW VOUCHER SESUAI PILIHANMU' . PHP_EOL; echo "MASUKKAN DELAY SHOW VOUCHER" . PHP_EOL; $jedaPin = readline("DETIK *(1-10000) => "); $menit = floor($jedaPin / 60); $sisaDetik = $jedaPin % 60; // memunculkan result menit dan sisa detik echo PHP_EOL . 'AUTO SHOW VOUCHER SETIAP ' . number_format($menit) . ' MENIT ' . $sisaDetik . ' DETIK' . PHP_EOL; while (true) { showVoc(); echo 'JEDA... SHOW VOUCHER LAGI SETELAH ' . number_format($menit) . ' MENIT ' . $sisaDetik . ' DETIK' . PHP_EOL; sleep($jedaPin); } } elseif ($menuSelect == 6) { echo "" . PHP_EOL; echo 'ATUR DELAY PIN PRODUK SESUAI PILIHANMU' . PHP_EOL; echo "MASUKKAN DELAY PIN PRODUK" . PHP_EOL; $jedaPin = readline("DETIK *(1-10000) => "); $menit = floor($jedaPin / 60); $sisaDetik = $jedaPin % 60; // memunculkan result menit dan sisa detik echo PHP_EOL . 'AUTO PIN PRODUK SETIAP ' . number_format($menit) . ' MENIT ' . $sisaDetik . ' DETIK' . PHP_EOL; while (true) { showItem(); echo 'JEDA... PIN PRODUK LAGI SETELAH ' . number_format($menit) . ' MENIT ' . $sisaDetik . ' DETIK' . PHP_EOL; sleep($jedaPin); } } elseif ($menuSelect == 7) { menuKomen: echo "" . PHP_EOL; do { echo "KOMEN BIASA & PIN KOMEN DENGAN KATA-KATA MU MAX 150 KATA!!\n1. KOMEN BIASA\n2. PIN KOMEN" . PHP_EOL; $komenMenu = readline("PILIH MENU => : "); if ($komenMenu == "1") { // PERULANGAN UNTUK MENGIRIM PESAN LAGI while (true) { $katakataSHOPEE = input("TEXT KOMENTAR"); // Pemeriksaan panjang string if (str_word_count($katakataSHOPEE) > 150) { echo 'PESAN TIDAK BOLEH LEBIH DARI 150 KATA!!'; } else { komenLive($katakataSHOPEE) . PHP_EOL . PHP_EOL; } } } else if ($komenMenu == "2") { echo "" . PHP_EOL; pinLagi: // PERULANGAN UNTUK MENGIRIM PESAN LAGI $katakataSHOPEE = input("TEXT PIN KOMENTAR"); // Pemeriksaan panjang string if (str_word_count($katakataSHOPEE) > 150) { echo 'PESAN TIDAK BOLEH LEBIH DARI 150 KATA!!'; } else { pinkomenLive($katakataSHOPEE) . PHP_EOL . PHP_EOL; $pilihan = readline("PIN KOMEN LAGI ?? (Y / N) => : "); do { if ($pilihan == "y" || $pilihan == "Y") { goto pinLagi; } else { exit(1); } } while ($pilihan == "y" || $pilihan == "Y"); } } else { echo "" . PHP_EOL; echo "[ GAGAL!! ] PILIHAN TIDAK DITEMUKAN!!\nANDA AKAN DIKEMBALIKAN KEPILIHAN MENU!!" . PHP_EOL . PHP_EOL; sleep(2); goto menuKomen; } } while ($komenMenu == "1" || $komenMenu == "2"); } elseif ($menuSelect == 8) { menuShare: echo "" . PHP_EOL; do { echo "1. BOMB LIKE\n2. BOMB SHARE\n3. FAKE ORDER" . PHP_EOL; $bombMenu = readline("PILIH MENU => : "); if ($bombMenu == "1") { echo "" . PHP_EOL; // PERULANGAN UNTUK MENGIRIM PESAN LAGI likeLagi: sendLike(); $pilihan = readline("KIRIM LIKE LAGI ?? (Y / N) => : "); do { if ($pilihan == "y" || $pilihan == "Y") { goto likeLagi; } else { goto menuShare; } } while ($pilihan == "y" || $pilihan == "Y"); } else if ($bombMenu == "2") { shareLagi: echo "" . PHP_EOL; sendShare(); $pilihan = readline("KIRIM SHARE LAGI ?? (Y / N) => : "); do { if ($pilihan == "y" || $pilihan == "Y") { goto shareLagi; } else { goto menuShare; } } while ($pilihan == "y" || $pilihan == "Y"); } else if ($bombMenu == "3") { echo "" . PHP_EOL; echo "MOHON DIBACA, BUAT NAMA FILE COOKIE MENGGUNAKAN ANGKA. CNTH: 1.txt, 2.txt, 3.txt" . PHP_EOL; $cookieAkunLain = readline('BERAPA BANYAK COOKIE YANG KAMU PUNYA ?? *CNTH: 2 => '); $kirimFakeOrder = readline('BERAPA BANYAK KIRIM FAKE ORDER => : '); $jedaFake = readline("DETIK *(1-10000) => "); $menit = floor($jedaFake / 60); $sisaDetik = $jedaFake % 60; // memunculkan result menit dan sisa detik echo PHP_EOL . 'AUTO MENGIRIM FAKE ORDER SETIAP ' . number_format($menit) . ' MENIT ' . $sisaDetik . ' DETIK' . PHP_EOL; echo "MENGIRIM FAKE ORDER TO SESSIONID: $sessionId\n"; while (true) { fakeOrder(); sleep($jedaFake); } } else { echo "" . PHP_EOL; echo "[ GAGAL!! ] PILIHAN TIDAK DITEMUKAN!!\nANDA AKAN DIKEMBALIKAN KEPILIHAN MENU!!" . PHP_EOL . PHP_EOL; sleep(1); goto menuShare; } } while ($bombMenu == "1" || $bombMenu == "2"); } elseif ($menuSelect == 9) { unbanLagi: echo "" . PHP_EOL; $uid = readline("UID UNBAN CHAT => : "); banUser(false, $uid); $pilihan = readline("ULANG BAN?? => : "); do { if ($pilihan == "y" || $pilihan == "Y") { goto unbanLagi; } } while ($pilihan == "y" || $pilihan == "Y"); } elseif ($menuSelect == 10) { echo "" . PHP_EOL; $katakataSHOPEE = input("MASUKKAN TEXT KOMENTAR"); $katakataSHOPEE = substr($katakataSHOPEE, 0, 150); // Pemeriksaan panjang string if (str_word_count($katakataSHOPEE) > 150) { echo 'PESAN TIDAK BOLEH LEBIH DARI 150 KATA'; } else { echo 'ATUR KIRIM PESAN WITH DELAY SESUAI PILIHANMU' . PHP_EOL; echo "MASUKKAN KIRIM PESAN WITH DELAY" . PHP_EOL; $jedaPin = readline("DETIK *(1-10000) => "); $menit = floor($jedaPin / 60); $sisaDetik = $jedaPin % 60; // memunculkan result menit dan sisa detik echo PHP_EOL . 'AUTO KIRIM PESAN BERULANG SETIAP ' . number_format($menit) . ' MENIT ' . $sisaDetik . ' DETIK' . PHP_EOL; while (true) { komenLive($katakataSHOPEE); echo 'JEDA... KIRIM PESAN LAGI SETELAH ' . number_format($menit) . ' MENIT ' . $sisaDetik . ' DETIK' . PHP_EOL; sleep($jedaPin); } } } elseif ($menuSelect == 11) { echo "" . PHP_EOL; addBanWord(); } elseif ($menuSelect == 12) { echo "" . PHP_EOL; endLive(); // } elseif ($menuSelect == 13) { } else { echo "[ GAGAL!! ] PILIHAN TIDAK DITEMUKAN!!" . PHP_EOL; goto inputLagi; } function input($text) { echo $text . " => : "; $select = trim(fgets(STDIN)); return $select; } function getData() { global $cookies, $key, $sessionId, $deviceId, $sellerId, $chatroomId, $shareurl, $usersig, $sellerId, $usernameId; $getSession = api("https://api-shopee.mas.mba/apiSess.php?key=$key&cookies=" . urlencode($cookies)); $sessionData = json_decode($getSession, true); if (!$sessionData) { echo $getSession; exit(1); } $errCode = $sessionData["err_code"] ?? null; $data = $sessionData["data"] ?? null; if ($errCode === 0 && $data && isset($data["session"])) { $session = $data["session"]; $sessionId = $session["session_id"] ?? '-'; $deviceId = $session["device_id"] ?? '-'; $sellerId = $session["uid"] ?? '-'; $timestamp = $session["start_time"] ?? 0; $usernameId = $session['username'] ?? '-'; $chatroomId = $session['chatroom_id'] ?? '-'; $usersig = $data['usersig'] ?? '-'; $shareurl = $data['share_url'] ?? '-'; $Title = $session["title"] ?? '-'; $Live = $session["status"] ?? '-'; $timestamp_in_seconds = $timestamp / 1000; $tanggalMulai = strtoupper(date("d/M", $timestamp_in_seconds)); $jamMulai = strtoupper(date("g:i a", $timestamp_in_seconds)); $statusLive = ($Live == "1") ? "RUNNING" : "STOP"; echo PHP_EOL . "--------|[ INFO DATA LIVE ]|--------" . PHP_EOL; echo 'LIVE TITLE: ' . $Title . PHP_EOL; echo 'LIVE TANGGAL: ' . $tanggalMulai . ' ' . $jamMulai . PHP_EOL; echo 'STATUS LIVE: ' . $statusLive . PHP_EOL; echo 'USERNAME: ' . $usernameId . PHP_EOL; echo 'SELLER ID: ' . $sellerId . PHP_EOL; echo PHP_EOL . '------|[ SESSION DATA LIVE ]|------' . PHP_EOL; echo 'SESSION LIVE: ' . $sessionId . PHP_EOL; echo 'DEVICEID LIVE: ' . $deviceId . PHP_EOL; echo 'CHATROOM LIVE: ' . $chatroomId . PHP_EOL; echo 'USERSIG LIVE: ' . $usersig . PHP_EOL; echo PHP_EOL . '------|[ SHARE URL LIVE ]|------' . PHP_EOL; echo 'URL LIVE: ' . $shareurl . PHP_EOL . PHP_EOL; } else { throw new Exception("GAGAL!! MSG: " . ($sessionData["err_msg"] ?? 'Unknown Error')); } } function getRMTP() { global $cookies, $key, $sessionId; $dataRMTP = api("https://api-shopee.mas.mba/rmtp.php?key=$key&sessionid=$sessionId&cookies=" . urlencode($cookies)); $RMTPdata = json_decode($dataRMTP, true); if ($RMTPdata === null && json_last_error() !== JSON_ERROR_NONE) { echo $dataRMTP; exit(1); } $errCode = $RMTPdata["err_code"] ?? null; $data = $RMTPdata["data"] ?? null; if ($errCode === 0 && $data && isset($data["push_url_list"])) { $keyLive = $data['push_url_list'][1]; $misahKey = preg_split("/\/(live|livestreaming)\//", $keyLive, -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY); $type = $misahKey[0]; $rtmp = $type . '/' . $misahKey[1] . '/'; $key = $misahKey[2]; echo PHP_EOL . '===| STREAMING KEY INFO |===' . PHP_EOL . PHP_EOL; echo 'DASHBOARD LIVE: https://creator.shopee.co.id/dashboard/live/' . $sessionId . PHP_EOL; echo 'RTMP FULL: ' . $keyLive . PHP_EOL . PHP_EOL; echo 'RTMP: ' . $rtmp . PHP_EOL; echo 'KEY: ' . $key . PHP_EOL; echo PHP_EOL . '===| CARA LIVE SHOOPE |===' . PHP_EOL; echo 'CARA LIVENYA GIMANA??,' . PHP_EOL; echo 'LIVE LANGSUNG DARI SHOPE APP, DAN KETIKA SUDAH PLAY LANGSUNG AJH CLOSE APPNYA / HILANGIN,' . PHP_EOL; echo 'LALU START DARI MULTI LOOP / TOOLS YANG KALIAN GUNAKAN!!' . PHP_EOL . PHP_EOL; echo 'DATA RTMP DISAVE PADA FILE dataRTMP.txt' . PHP_EOL . PHP_EOL; $fp = fopen("dataRTMP.txt", 'w'); fwrite($fp, "RMTP: $rtmp\nKEY: $key\n\nRTMP FULL: $keyLive"); fclose($fp); } else { echo "ERROR GET DATA!!\nHARAP COBA KEMBALI!! MSG : " . strtoupper($RMTPdata['err_msg']) . PHP_EOL; exit(1); } } function banUser($torf, $uid) { global $sessionId, $cookies; $url = "https://live.shopee.co.id/webapi/v1/session/{$sessionId}/comment/ban"; $data = [ 'is_ban' => $torf, 'ban_uid' => $uid, ]; $headers = [ 'Host' => 'live.shopee.co.id', 'Sec-Ch-Ua' => '"Brave";v="119", "Chromium";v="119", "Not?A_Brand";v="24"', 'Sec-Ch-Ua-Mobile' => '?0', 'User-Agent' => 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36', 'X-Api-Source' => 'pc', 'Content-Type' => 'application/json', 'Accept' => 'application/json', 'X-Shopee-Language' => 'id', 'X-Requested-With' => 'XMLHttpRequest', 'Sec-Ch-Ua-Platform' => '"macOS"', 'Sec-Gpc' => '1', 'Accept-Language' => 'id-ID,id;q=0.6', 'Sec-Fetch-Site' => 'same-origin', 'Sec-Fetch-Mode' => 'cors', 'Sec-Fetch-Dest' => 'empty', 'Referer' => 'https://shopee.co.id/?is_from_login=true&is_from_login=true', 'Accept-Encoding' => 'gzip, deflate, br', 'Cookie' => $cookies, ]; $options = [ 'http' => [ 'header' => implode("\r\n", array_map(function ($key, $value) { return "$key: $value"; }, array_keys($headers), $headers)), 'method' => 'POST', 'content' => json_encode($data), ], ]; $context = stream_context_create($options); $response = @file_get_contents($url, false, $context); if ($torf == true) { $bann = 'BANNED'; } else { $bann = 'UNBANNED'; } if ($response) { $responseData = json_decode($response, true); $messages = $responseData['err_msg']; echo strtoupper($messages) . ' ' . $bann . ' CHAT USER UID: ' . $uid . PHP_EOL . PHP_EOL; } else { echo 'GAGAL ' . $bann . ' USER UID: ' . $uid . PHP_EOL . PHP_EOL; } } //bot komen function getDataKomen() { global $cookies, $sessionId, $usersig; $url = 'https://creator.shopee.co.id/supply/api/lm/sellercenter/realtime/sessionList?page=1&pageSize=10&name='; $headers = [ 'authority' => 'creator.shopee.co.id', 'accept' => 'application/json', 'accept-language' => 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7', 'content-type' => 'application/json', 'cookie' => $cookies, 'language' => 'en', 'sec-ch-ua' => '"Not_A Brand";v="8", "Chromium";v="120", "Google Chrome";v="120"', 'sec-ch-ua-mobile' => '?0', 'sec-ch-ua-platform' => '"Windows"', 'sec-fetch-dest' => 'empty', 'sec-fetch-mode' => 'cors', 'sec-fetch-site' => 'same-origin', 'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36', 'x-env' => 'live', 'x-region' => 'id', 'x-region-domain' => 'co.id', 'x-region-timezone' => '+0700', ]; $options = [ 'http' => [ 'header' => implode("\r" . PHP_EOL, array_map(function ($key, $value) { return "$key: $value"; }, array_keys($headers), $headers)), ], ]; $context = stream_context_create($options); $response = file_get_contents($url, false, $context); $sessionData = json_decode($response, true); if ($sessionData && $sessionData['code'] === 0 && $sessionData['data']['list'] && $sessionData['data']['list'][0]) { $sessionId = $sessionData['data']['list'][0]['sessionId']; } $dataUrl = 'https://live.shopee.co.id/api/v1/session/' . $sessionId . ''; $headers = array( "User-Agent: ShopeeID/3.15.24 (com.beeasy.shopee.id; build:3.15.24; iOS 16.7.2) Alamofire/5.0.5 language=id app_type=1", "Content-Type: application/json", "Cookie: " . $cookies // Fixed variable name ); $options = array( "http" => array( "header" => $headers, "method" => "GET", "ignore_errors" => true ) ); $context = stream_context_create($options); $responseData = file_get_contents($dataUrl, false, $context); $sessionData = json_decode($responseData, true); if ($sessionData) { if ($sessionData['err_code'] === 0 && $sessionData['data']) { $deviceId = $sessionData['data']['session']['device_id']; } } $dataUrl = 'https://live.shopee.co.id/api/v1/session/' . $sessionId . '/joinv2'; $data = [ 'is_boost' => false, 'need_follow_session' => true, 'uuid' => $deviceId, ]; $requestHeaders = [ 'http' => [ 'method' => 'POST', 'header' => implode("\r\n", [ 'Host: live.shopee.co.id', 'User-Agent: ShopeeID/3.15.24 (com.beeasy.shopee.id; build:3.15.24; iOS 16.7.2) Alamofire/5.0.5 language=id app_type=1', 'Content-Type: application/json', 'Cookie: ' . $cookies, ]), 'content' => json_encode($data), ], ]; $context = stream_context_create($requestHeaders); $responseData = file_get_contents($dataUrl, false, $context); $sessionData = json_decode($responseData, true); if ($sessionData) { if ($sessionData['err_code'] === 0 && $sessionData['data']) { $usersig = $sessionData['data']['usersig']; } } } function komenLive($message) { getDataKomen(); global $sessionId, $cookies, $deviceId, $responseKomen, $usersig; $komenUrl = 'https://live.shopee.co.id/api/v1/session/' . $sessionId . '/message'; $postData = [ 'uuid' => $deviceId, 'usersig' => $usersig, 'content' => '{"type":101,"content":"' . $message . '"}', 'pin' => false, ]; $headers = [ 'Cookie: ' . $cookies, 'Content-Type: application/json', 'referer: https://live.shopee.co.id/pc/live?session=' . $sessionId, ]; // cURL setup $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $komenUrl); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($postData)); curl_setopt($ch, CURLOPT_HTTPHEADER, $headers); // Execute cURL session $responseKomen = curl_exec($ch); // Close cURL session curl_close($ch); // Parse JSON response $responseData = json_decode($responseKomen, true); // Check if err_msg exists if (isset($responseData['err_msg'])) { $errMsg = $responseData['err_msg']; // Add your custom handling for err_msg if ($errMsg === 'Pengguna belum login') { echo 'COOKIE MATI!! TOLONG LOGIN ULANG DAN AMBIL COOKIE BARU!!' . PHP_EOL; } else { echo "STATUS PESAN BOT: " . strtoupper($errMsg); } } // Check if data.message_id exists if (isset($responseData['data']['message_id'])) { echo " ( " . $responseData['data']['message_id'] . " )" . PHP_EOL . PHP_EOL; } } function pinkomenLive($message) { getDataKomen(); global $sessionId, $cookies, $deviceId, $responseKomen, $usersig; $url = 'https://live.shopee.co.id/webapi/v1/session/' . $sessionId . '/message'; $headers = array( 'authority: live.shopee.co.id', 'accept: application/json, text/plain, */*', 'accept-language: en-US,en;q=0.9,id;q=0.8', 'client-info: platform=9', 'content-type: application/json', 'cookie: ' . $cookies, 'origin: https://live.shopee.co.id', 'referer: https://live.shopee.co.id/pc/live?session=' . $sessionId, 'sec-ch-ua: "Not A(Brand";v="99", "Google Chrome";v="121", "Chromium";v="121"', 'sec-ch-ua-mobile: ?0', 'sec-ch-ua-platform: "Windows"', 'sec-fetch-dest: empty', 'sec-fetch-mode: cors', 'sec-fetch-site: same-origin', 'user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36', // 'x-livestreaming-auth: ls_web_v1_30001_1706974748_158765ixayosuu8zpuu22lednxw4o78r862r|2BitsheBnDCw/V/kSZYnwjUc/qu4UO9/mJtGC5dXwIw=', // 'x-ls-sz-token: JRO2YqTlyh3qeNBVZdHhMQ==|0wbgK9jZmseVKtOg3mjX1vpqiG2abv7tX8/xxcrBzP6fixZEQKSTWDqoEUGdcPRN2QBQV4Kegoc=|nWnxZQwDyLSacJ32|08|3', ); $data = array( 'uuid' => $deviceId, 'usersig' => $usersig, 'content' => '{"type":101,"content":"' . $message . '"}', 'pin' => true, ); $options = array( CURLOPT_URL => $url, CURLOPT_HTTPHEADER => $headers, CURLOPT_RETURNTRANSFER => true, CURLOPT_POST => true, CURLOPT_POSTFIELDS => json_encode($data), CURLOPT_SSL_VERIFYPEER => false, // Use this only for testing, should be true in production CURLOPT_SSL_VERIFYHOST => false, // Use this only for testing, should be true in production ); $curl = curl_init(); curl_setopt_array($curl, $options); $responseKomen = curl_exec($curl); if ($responseKomen === false) { echo 'GAGAL!!, MOHON COBA ULANG!! '; } else { // Parse JSON response $responseData = json_decode($responseKomen, true); // Check if err_msg exists if (isset($responseData['err_msg'])) { $errMsg = $responseData['err_msg']; // Add your custom handling for err_msg if ($errMsg === 'Pengguna belum login') { echo 'COOKIE MATI!! TOLONG LOGIN ULANG DAN AMBIL COOKIE BARU!!' . PHP_EOL; } else { echo "PIN KOMEN: " . strtoupper($message) . "\nSTATUS PESAN BOT: " . strtoupper($errMsg); } } // Check if data.message_id exists if (isset($responseData['data']['message_id'])) { echo " ( " . $responseData['data']['message_id'] . " )" . PHP_EOL . PHP_EOL; } } curl_close($curl); } function endLive() { global $sessionId, $cookies, $err_msg; $apiUrl = "https://live.shopee.co.id/api/v1/session/$sessionId/end/"; $requestHeaders = [ 'http' => [ 'method' => 'POST', 'header' => implode("\r\n", [ 'Host: live.shopee.co.id', 'User-Agent: ShopeeID/3.15.24 (com.beeasy.shopee.id; build:3.15.24; iOS 16.7.2) Alamofire/5.0.5 language=id app_type=1', 'Content-Type: application/json', 'Cookie: ' . $cookies, ]), ], ]; $context = stream_context_create($requestHeaders); $response = file_get_contents($apiUrl, false, $context); $json_response = json_decode($response, true); if ($json_response !== null) { $err_code = isset($json_response['err_code']) ? $json_response['err_code'] : ''; $err_msg = isset($json_response['err_msg']) ? $json_response['err_msg'] : ''; if ($err_code === '0') { echo strtoupper($err_msg) . " MEMBERHENTIKAN STREAMING SESSIONID: $sessionId\n"; } elseif ($err_code === '3000057') { echo "STREAMING SESSION $sessionId TIDAK ADA LIVE!!\n"; } else { echo strtoupper($err_msg) . " MEMBERHENTIKAN STREAMING SESSION: $sessionId\n"; } } else { echo strtoupper($err_msg) . " MEMBERHENTIKAN STREAMING!!\n"; } } //auto komen + ban filter kata-kata function checkMessage() { global $chatroomId, $deviceId, $cookies, $processedMessages, $bannedUsers, $user, $lastBotMessageID, $userLastResponseTime, $sellerId; $apiUrl = 'https://chatroom-live.shopee.co.id/api/v1/fetch/chatroom/' . $chatroomId . '/message?uuid=' . $deviceId; $options = [ 'http' => [ 'header' => 'Cookie: ' . $cookies, ], ]; $context = stream_context_create($options); $response = file_get_contents($apiUrl, false, $context); if ($response === false) { echo 'ERROR MENGAMBIL DATA!!' . PHP_EOL; return null; // Return null in case of an error } // Extract data from JSON response $responseJson = json_decode($response, true); // Check if data is available if (!isset($responseJson['data']['message'][0]['msgs'])) { return null; } $messages = $responseJson['data']['message'][0]['msgs']; $timestamp = $responseJson['data']['timestamp']; // Extract id, display_name, and content $extractedData = array_map(function ($message) { return [ 'id' => $message['id'], 'uid' => $message['uid'], 'nickname' => $message['nickname'], 'display_name' => $message['display_name'], 'content' => json_decode($message['content'], true)['content'], ]; }, $messages); // Filter out already processed messages $newMessages = array_filter($extractedData, function ($message) use ($processedMessages) { return !in_array($message['content'], $processedMessages); }); foreach ($newMessages as $message) { $user = $message['uid']; if ($sellerId === $user) { // Continue to the next iteration if the user is the seller continue; } // Print extracted data for new messages if (!empty($newMessages)) { $date = date('d/m H:i:s', $timestamp); echo "===| NEW MESSAGE |===" . PHP_EOL; echo "TIME: " . $date . PHP_EOL . ""; echo "UID: " . $message['uid'] . PHP_EOL . ""; echo "NAMA: " . $message['display_name'] . " ( " . $message['nickname'] . " )" . PHP_EOL; echo "MESSAGE: " . $message['content'] . PHP_EOL . ""; echo "STATUS: "; // Add the processed message to the array $processedMessages[] = $message['content']; // Check for banned words if (containsBannedWords($message['content'])) { echo 'DITEMUKAN KATA-KATA YANG DIFILTER!!' . PHP_EOL; if (!in_array($message['uid'], $bannedUsers)) { $idUserKmen = $message['uid']; banUser(true, $idUserKmen); $bannedUsers[] = $idUserKmen; } else { echo 'USER SUDAH DIBANNED CHAT!! SKIP!!' . PHP_EOL; } } else { echo 'TIDAK DITEMUKAN KATA-KATA YANG DIFILTER!!' . PHP_EOL; } $currentTime = time(); // Check if the user has been responded to in the last 5 seconds if (isset($userLastResponseTime[$user]) && ($currentTime - $userLastResponseTime[$user]) < 5) { file_put_contents('auto_reply.txt', '' ); continue; // Skip processing this message } // Include file with keyword-response pairs $keywordData=include "keyword.php" ; // Check if the message contains a specific phrase to be skipped $skipPhrases=["Saya bergabung Lelang Time!", "Saya bergabung Lelang Yuk!" , "Saya bergabung Cepet Cepetan Time!" , "Saya bergabung Cepet Cepetan Dapat harga murah!" , "Saya bergabung Lelang Yuk Guyss!" ]; $skipMessage=false; foreach ($skipPhrases as $skipPhrase) { if (strpos(strtolower($message['content']), strtolower($skipPhrase)) !==false) { $skipMessage=true; break; // Stop checking after the first match } } if ($skipMessage) { // Skip processing this message file_put_contents('auto_reply.txt', '' ); continue; } $foundKeyword=false; foreach ($keywordData as $keyword=> $response) { if (strpos(strtolower($message['content']), $keyword) !== false) { $personalizedResponse = $keywordData['katakatasapa'] . " " . $message['nickname'] . ", " . $response; file_put_contents('auto_reply.txt', $personalizedResponse); $foundKeyword = true; break; // Stop checking after the first match } } if (!$foundKeyword) { $defaultResponse = $keywordData['katakatasapa'] . " " . $message['nickname'] . ", " . $keywordData['katakatadefault']; file_put_contents('auto_reply.txt', $defaultResponse); } } // Update the last response time for the user $userLastResponseTime[$user] = $currentTime; $lastBotMessageID[] = $message; } $messageFilePath = 'auto_reply.txt'; // Membaca isi file auto_reply.txt $message = file_get_contents($messageFilePath); // Mengirim pesan jika isi file tersedia if (!empty($message)) { komenLive($message); $lastBotMessageID[] = $message; // Menghapus isi file agar tidak dikirim lagi file_put_contents($messageFilePath, ''); } } function GetMessage() { global $chatroomId, $deviceId, $cookies, $processedMessages, $bannedUsers, $sessionId, $sellerId; $apiUrl = 'https://chatroom-live.shopee.co.id/api/v1/fetch/chatroom/' . $chatroomId . '/message?uuid=' . $deviceId; $options = [ 'http' => [ 'header' => "Cookie: $cookies\r\n" . "User-Agent: ShopeeID/3.15.24 (com.beeasy.shopee.id; build:3.15.24; iOS 16.7.2) Alamofire/5.0.5 language=id app_type=1\r\n" . "Content-Type: application/json", ], ]; $context = stream_context_create($options); $response = file_get_contents($apiUrl, false, $context); if ($response === false) { echo 'ERROR MENGAMBIL DATA!!' . PHP_EOL; return null; // Return null in case of an error } // Extract data from JSON response $responseJson = json_decode($response, true); // Check if data is available if (isset($responseJson['data']['message'][0]['msgs'])) { $messages = $responseJson['data']['message'][0]['msgs']; $timestamp = $responseJson['data']['timestamp']; // Extract id, display_name, and content $extractedData = array_map(function ($message) { return [ 'id' => $message['id'], 'uid' => $message['uid'], 'nickname' => $message['nickname'], 'display_name' => $message['display_name'], 'content' => json_decode($message['content'], true)['content'], ]; }, $messages); // Filter out already processed messages $newMessages = array_filter($extractedData, function ($message) use ($processedMessages) { return !in_array($message['content'], $processedMessages); }); foreach ($newMessages as $message) { $user = $message['uid']; if ($sellerId === $user) { // Continue to the next iteration if the user is the seller continue; } // Print extracted data for new messages if (!empty($newMessages)) { $date = date('d/m H:i:s', $timestamp); echo "===| NEW MESSAGE |===" . PHP_EOL; echo "TIME: " . $date . PHP_EOL . ""; echo "UID: " . $message['uid'] . PHP_EOL . ""; echo "NAMA: " . $message['display_name'] . PHP_EOL . ""; echo "MESSAGE: " . $message['content'] . PHP_EOL . ""; echo "STATUS: "; // Add the processed message to the array $processedMessages[] = $message['content']; // Check for banned words if (containsBannedWords($message['content'])) { echo 'KATA-KATA DILARANG DITEMUKAN!!' . PHP_EOL; if (!in_array($message['uid'], $bannedUsers)) { $idUserKmen = $message['uid']; banUser(true, $idUserKmen); $bannedUsers[] = $idUserKmen; } else { echo 'USER SUDAH DIBANNED CHAT!! SKIP!!' . PHP_EOL . PHP_EOL; } } else { echo 'TIDAK DITEMUKAN KATA-KATA YANG DIFILTER!!' . PHP_EOL . PHP_EOL; } } } } } //pin produk function getItemData() { global $cookies, $sessionId, $acakNomorProduk, $DataItem, $produkItem, $totalProduk; $sessionUrl = "https://live.shopee.co.id/api/v1/session/$sessionId/host/items?visible=true&offset=0&limit=100"; $options = [ 'http' => [ 'method' => 'GET', 'header' => implode("\r\n", [ 'Host: live.shopee.co.id', 'User-Agent: ShopeeID/3.15.24 (com.beeasy.shopee.id; build:3.15.24; iOS 16.7.2) Alamofire/5.0.5 language=id app_type=1', 'Content-Type: application/json', 'Referer: https://live.shopee.co.id/pc/preview?session=' . $sessionId, 'Cookie: ' . $cookies, ]), ], ]; $context = stream_context_create($options); $sessionData = file_get_contents($sessionUrl, false, $context); // print_r($sessionData); if ($sessionData) { // Decode JSON string into an array $sessionData = json_decode($sessionData, true); // Check if 'total_count' is greater than 0 if ($sessionData['data']['total_count'] > 0) { // Get total count $totalProduk = $sessionData['data']['total_count']; // Generate random index $acakNomorProduk = mt_rand(0, $totalProduk - 1); // Get random item data $NoProduk = $sessionData['data']['items'][$acakNomorProduk]; $produkItem = "ID: " . $NoProduk['item_id'] . PHP_EOL . "NAMA: " . strtoupper($NoProduk['name']); // Modify the response data to include only the random item $sessionData = $NoProduk; } else { // If total_count is 0, set response to an empty array $sessionData = array(); } // Encode modified response back to JSON $DataItem = json_encode($sessionData); // Return the modified response return $DataItem; } else { // Return an error message if JSON decoding fails return 'Error decoding JSON data.'; } } function showItem() { getItemData(); global $cookies, $sessionId, $DataItem, $acakNomorProduk, $produkItem; $pinUrl = 'https://live.shopee.co.id/api/v1/session/' . $sessionId . '/show'; $postData = [ 'item' => $DataItem, ]; $headers = array( 'User-Agent: ShopeeID/3.15.24 (com.beeasy.shopee.id; build:3.15.24; iOS 16.7.2) Alamofire/5.0.5 language=id app_type=1', 'Content-Type: application/json', 'Cookie: ' . $cookies // Fixed variable name ); // cURL setup $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $pinUrl); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($postData)); curl_setopt($ch, CURLOPT_HTTPHEADER, $headers); // Execute cURL session $responsePin = curl_exec($ch); curl_close($ch); $Pindata = json_decode($responsePin, true); //print_r($Pindata); // // Check if 'err_code' and 'err_msg' keys exist $errCode = isset($Pindata['err_code']) ? $Pindata['err_code'] : null; $errMsg = isset($Pindata['err_msg']) ? $Pindata['err_msg'] : null; // Build status message echo "SET PIN ETALASE NO " . ($acakNomorProduk + 1) . "\n$produkItem\nSTATUS PIN PRODUK: " . strtoupper($errMsg) . " MENAMPILKAN ETALASE NO " . $acakNomorProduk + 1 . "!!\n\n"; } function sendLike() { global $sessionId; try { echo "SEND LIKE TO SESSIONID: $sessionId\n"; $cookieAkunLain = readline('FILE COOKIE AKUN LAIN => '); $cookieFile = file_get_contents($cookieAkunLain); $count = readline('BERAPA KALI KIRIM SHARE *(1x KIRIM 50) => : '); for ($index = 1; $index <= $count; $index++) { try { $url="https://live.shopee.co.id/api/v1/session/$sessionId/like" ; $data=['like_cnt'=> 50]; $headers = [ 'Host' => 'live.shopee.co.id', 'Accept-Language' => 'en-US,en;q=0.5', 'Content-Type' => 'application/json', // Add this line 'User-Agent' => 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0', 'Cookie' => $cookieFile ]; $options = [ 'http' => [ 'header' => implode("\r\n", array_map(function ($key, $value) { return "$key: $value"; }, array_keys($headers), $headers)), 'method' => 'POST', 'content' => json_encode($data), ], ]; $context = stream_context_create($options); $response = file_get_contents($url, false, $context); $UIdata = json_decode($response, true); $err_code = $UIdata['err_code']; $err_msg = $UIdata['err_msg']; $status = ($err_code === 0) ? 'BERHASIL' : 'GAGAL'; echo "$status KIRIM 50 LIKE KE SESSIONID: $sessionId | #$index/$count |\n"; } catch (Exception $error) { echo $error . PHP_EOL; echo "GAGAL MENGIRIM LIKE!!\n"; break; } } } catch (Exception $error) { echo $error . PHP_EOL; } } function sendShare() { global $sessionId, $sendShare; try { echo "SHARE LIVE SESSIONID: $sessionId\n"; $sendShare = readline('BERAPA BANYAK KIRIM FAKE ORDER => : '); $cookieAkunLain = readline('FILE COOKIE AKUN LAIN => '); $cookieFile = file_get_contents($cookieAkunLain); for ($index = 1; $index <= $sendShare; $index++) { try { $url="https://live.shopee.co.id/api/v1/session/{$sessionId}/msg/share" ; $data=[ 'headers'=> [ 'User-Agent' => 'okhttp/3.12.4 app_type=1', 'Accept-Encoding' => 'gzip', 'Content-Type' => 'application/json', 'shopee_http_dns_mode' => '1', 'x-shopee-client-timezone' => 'Asia/Jakarta', 'Cookie' => $cookieFile, ], 'data' => [ 'share_to' => '', ], ]; $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data['data'])); curl_setopt($ch, CURLOPT_HTTPHEADER, array_map( function ($key, $value) { return "$key: $value"; }, array_keys($data['headers']), $data['headers'] )); $response = curl_exec($ch); // Check for cURL errors if (curl_errno($ch)) { echo 'Curl error: ' . curl_error($ch) . PHP_EOL; // Handle the error as needed } curl_close($ch); $UIdata = json_decode($response, true); $err_code = $UIdata['err_code']; $err_msg = $UIdata['err_msg']; $status = ($err_code === 0) ? 'BERHASIL' : 'GAGAL'; echo "$status SHARE LIVE SESSIONID: $sessionId | #$index/$sendShare |\n"; } catch (Exception $error) { echo $error . PHP_EOL; echo "GAGAL SHARE LIVE SESSIONID: $sessionId!!\n"; break; } } } catch (Exception $error) { echo $error . PHP_EOL; } } function fakeOrder() { global $sessionId, $kirimFakeOrder, $cookieAkunLain; try { for ($index = 1; $index <= $kirimFakeOrder; $index++) { $cookieAkunLain=rand(1, $cookieAkunLain); $cookieFile=file_get_contents($cookieAkunLain . '.txt' ); try { $url="https://live.shopee.co.id/api/v1/session/{$sessionId}/msg/buy" ; $data=[ 'headers'=> [ 'User-Agent' => 'okhttp/3.12.4 app_type=1', 'Accept-Encoding' => 'gzip', 'Content-Type' => 'application/json', 'shopee_http_dns_mode' => '1', 'x-shopee-client-timezone' => 'Asia/Jakarta', 'Cookie' => $cookieFile, ], 'data' => [ 'buy_cnt' => '50', ], ]; $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data['data'])); curl_setopt($ch, CURLOPT_HTTPHEADER, array_map( function ($key, $value) { return "$key: $value"; }, array_keys($data['headers']), $data['headers'] )); $response = curl_exec($ch); // Check for cURL errors if (curl_errno($ch)) { echo 'Curl error: ' . curl_error($ch) . PHP_EOL; // Handle the error as needed } curl_close($ch); $UIdata = json_decode($response, true); $err_code = $UIdata['err_code']; $err_msg = $UIdata['err_msg']; $status = ($err_code === 0) ? 'BERHASIL' : 'GAGAL'; echo "USE COOKIE: $cookieAkunLain.txt | $status MENGIRIM FAKE ORDER KE SESSIONID: $sessionId | #$index/$kirimFakeOrder |\n"; } catch (Exception $error) { echo $error . PHP_EOL; echo "GAGAL MENGIRIM LIKE!!\n"; break; } } } catch (Exception $error) { echo $error . PHP_EOL; } } function addBanWord() { global $cookies, $key, $bannedWords, $banwordFilePath; echo "ADD BANNED WORDS FROM FILE: $banwordFilePath\n"; try { $bannedWordsString = implode("\n", $bannedWords); $arrayWord = explode("\n", $bannedWordsString); foreach ($arrayWord as $index => $kata) { $addWord = api("https://api-shopee.mas.mba/bannedWord.php?key=$key&kata=$kata&cookies=" . urlencode($cookies)); $responseData = json_decode($addWord, true); if ($responseData === null && json_last_error() !== JSON_ERROR_NONE) { echo 'ERROR!! SILAHKAN RUN ULANG!!';; exit(1); } if ($responseData['err_code'] == 0) { $kataInput = ''; // Variabel untuk menyimpan kata input $errorMessage = ''; // Variabel untuk menyimpan pesan error if (!empty($responseData['data']['sensitive_words'])) { $kataInput = $responseData['data']['sensitive_words']['0']['word']; $errorMessage = "#" . ($index + 1) . "/" . count($arrayWord) . " " . $kataInput . " => " . strtoupper($responseData['err_msg']) . " MENAMBAHKAN KATA KEDALAM BANNED WORD!!\n"; } else { $errorMessage = "#" . ($index + 1) . "/" . count($arrayWord) . " $kata => SUDAH ADA DALAM BANNED WORD!!\n"; } echo $errorMessage; } } } catch (Exception $error) { echo $error . PHP_EOL; } } function vocList() { global $sessionId, $cookies, $encListVoc, $voucherCode, $promotionId, $signature; $apiUrl = "https://live.shopee.co.id/api/v1/session/" . $sessionId . '/voucher?scene=0'; $headers = array( "User-Agent: ShopeeID/3.15.24 (com.beeasy.shopee.id; build:3.15.24; iOS 16.7.2) Alamofire/5.0.5 language=id app_type=1", "Content-Type: application/json", "Cookie: " . $cookies // Fixed variable name ); $options = array( "http" => array( "header" => $headers, "method" => "GET", "ignore_errors" => true ) ); $context = stream_context_create($options); $response = file_get_contents($apiUrl, false, $context); $resultListVoc = json_decode($response, true); if ($resultListVoc && isset($resultListVoc['data']['shopee_vouchers'])) { $totalProduk = count($resultListVoc['data']['shopee_vouchers']); if ($totalProduk > 0) { $acakNomorProduk = mt_rand(0, 2); $getData = $resultListVoc['data']['shopee_vouchers'][$acakNomorProduk]; $promotionId = $getData['promotion_id']; $voucherCode = $getData['voucher_code']; $signature = $getData['signature']; $encListVoc = json_encode($getData); } else { echo "TIDAK DITEMUKAN VOUCHER!! SILAHKAN RUN ULANG ATAU CEK LIVE ANDA!!" . PHP_EOL; } } else { echo "TIDAK DITEMUKAN DATA VOUCHER!! SILAHKAN RUN ULANG ATAU CEK LIVE ANDA!!\n"; } } function showVoc() { vocList(); global $sessionId, $cookies, $encListVoc, $voucherCode, $promotionId, $signature; $apiUrl = "https://live.shopee.co.id/api/v1/session/" . $sessionId . '/voucher/show'; $requestData = array( 'voucher' => $encListVoc, 'identifier' => array( 'voucher_code' => $voucherCode, 'promotion_id' => $promotionId, 'signature' => $signature ) ); $options = [ 'http' => [ 'header' => [ 'User-Agent: ShopeeID/3.15.24 (com.beeasy.shopee.id; build:3.15.24; iOS 16.7.2) Alamofire/5.0.5 language=id app_type=1', 'Content-Type: application/json', 'Cookie: ' . $cookies, ], 'method' => 'POST', 'content' => json_encode($requestData) ], ]; $context = stream_context_create($options); $response = file_get_contents($apiUrl, false, $context); if ($response === false) { $resultShowVoc = json_decode($response, true); echo 'ERROR : ' . $resultShowVoc['err_msg'] . PHP_EOL; echo "\nTOLONG LANGSUNG SEGERA PM FB YAA BIAR SEGERA DIFIX!!"; } else { $resultShowVoc = json_decode($response, true); $resultShowVoc = $resultShowVoc['err_msg']; echo "STATUS SHOW VOUCHER: "; echo strtoupper($resultShowVoc) . " MENAMPILKAN VOUCHER CODE: " . $voucherCode . "" . PHP_EOL . PHP_EOL; } } function getVoucData() { global $sessionId, $cookies, $encListVoc, $voucher_code, $promotionId, $signature; $apiUrl = "https://live.shopee.co.id/api/v1/session/" . $sessionId . '/voucher?scene=0'; $headers = array( "User-Agent: ShopeeID/3.15.24 (com.beeasy.shopee.id; build:3.15.24; iOS 16.7.2) Alamofire/5.0.5 language=id app_type=1", "Content-Type: application/json", "Cookie: " . $cookies // Fixed variable name ); $options = array( "http" => array( "header" => $headers, "method" => "GET", "ignore_errors" => true ) ); $context = stream_context_create($options); $response = file_get_contents($apiUrl, false, $context); $getVoucher = json_decode($response, true); if ($getVoucher && isset($getVoucher['data']['shopee_vouchers']) && count($getVoucher['data']['shopee_vouchers']) > 0) { // Display voucher details in a dynamic table $maxWidthVocCode = strlen('VOUCHER CODE'); $maxWidthVocMinSpend = strlen('MIN SPEND'); $maxWidthDiscount = strlen('DISCOUNT'); $maxWidthDiscountCap = strlen('DISCOUNT CAP'); echo logger("MENGAMBIL LIST DATA VOUCHER..."); sleep(2); foreach ($getVoucher['data']['shopee_vouchers'] as $voucherData) { $voucher_code = $voucherData['voucher_code']; $min_spend = $voucherData['min_spend']; $discount_percentage = $voucherData['discount_percentage']; $discount_cap = $voucherData['discount_cap']; // Update maximum column widths $maxWidthVocCode = max($maxWidthVocCode, strlen($voucher_code)); $maxWidthVocMinSpend = max($maxWidthVocMinSpend, strlen($min_spend)); $maxWidthDiscount = max($maxWidthDiscount, strlen($discount_percentage)); $maxWidthDiscountCap = max($maxWidthDiscountCap, strlen($discount_cap)); } // Create a dynamic table header based on maximum column widths echo "+" . str_repeat('-', $maxWidthVocCode + 3) . "+" . str_repeat('-', $maxWidthVocMinSpend + 4) . "+" . str_repeat('-', $maxWidthDiscount + 4) . "+" . str_repeat('-', $maxWidthDiscountCap + 3) . "+\n"; echo "| " . str_pad('VOUCHER CODE', $maxWidthVocCode) . " | " . str_pad('MIN SPEND', $maxWidthVocMinSpend) . " | " . str_pad('DISCOUNT', $maxWidthDiscount) . " | " . str_pad('DISCOUNT CAP', $maxWidthDiscountCap) . " |\n"; echo "+" . str_repeat('-', $maxWidthVocCode + 3) . "+" . str_repeat('-', $maxWidthVocMinSpend + 4) . "+" . str_repeat('-', $maxWidthDiscount + 4) . "+" . str_repeat('-', $maxWidthDiscountCap + 3) . "+\n"; foreach ($getVoucher['data']['shopee_vouchers'] as $voucherData) { $voucher_code = $voucherData['voucher_code']; $min_spend = $voucherData['min_spend']; $discount_percentage = $voucherData['discount_percentage']; $discount_cap = $voucherData['discount_cap']; // Display the randomly selected voucher data echo "| " . str_pad($voucher_code, $maxWidthVocCode) . " | " . str_pad($min_spend, $maxWidthVocMinSpend) . " | " . str_pad($discount_percentage, $maxWidthDiscount) . " | " . str_pad($discount_cap, $maxWidthDiscountCap) . " |\n"; } echo "+" . str_repeat('-', $maxWidthVocCode + 3) . "+" . str_repeat('-', $maxWidthVocMinSpend + 4) . "+" . str_repeat('-', $maxWidthDiscount + 4) . "+" . str_repeat('-', $maxWidthDiscountCap + 3) . "+\n"; echo logger("MENAMPILKAN VOUCHER..."); sleep(2); //show 1 data saja dan buat show vocher ke live $maxWidthVocCode = strlen('VOUCHER CODE'); $maxWidthVocMinSpend = strlen('MIN SPEND'); $maxWidthDiscount = strlen('DISCOUNT'); $maxWidthDiscountCap = strlen('DISCOUNT CAP'); // Get the total number of vouchers $totalVouchers = count($getVoucher['data']['shopee_vouchers']); // Check if there are vouchers available if ($totalVouchers > 0) { // Generate a random index to select a voucher $randomIndex = mt_rand(0, $totalVouchers - 1); // Get the randomly selected voucher data $voucherData = $getVoucher['data']['shopee_vouchers'][$randomIndex]; $voucher_code = $voucherData['voucher_code']; $min_spend = $voucherData['min_spend']; $discount_percentage = $voucherData['discount_percentage']; $discount_cap = $voucherData['discount_cap']; $promotionId = $voucherData['promotion_id']; $signature = $voucherData['signature']; $encListVoc = json_encode($voucherData); // Update maximum column widths $maxWidthVocCode = max($maxWidthVocCode, strlen($voucher_code)); $maxWidthVocMinSpend = max($maxWidthVocMinSpend, strlen($min_spend)); $maxWidthDiscount = max($maxWidthDiscount, strlen($discount_percentage)); $maxWidthDiscountCap = max($maxWidthDiscountCap, strlen($discount_cap)); // Create a dynamic table header based on maximum column widths echo "+" . str_repeat('-', $maxWidthVocCode + 3) . "+" . str_repeat('-', $maxWidthVocMinSpend + 4) . "+" . str_repeat('-', $maxWidthDiscount + 4) . "+" . str_repeat('-', $maxWidthDiscountCap + 3) . "+\n"; echo "| " . str_pad('VOUCHER CODE', $maxWidthVocCode) . " | " . str_pad('MIN SPEND', $maxWidthVocMinSpend) . " | " . str_pad('DISCOUNT', $maxWidthDiscount) . " | " . str_pad('DISCOUNT CAP', $maxWidthDiscountCap) . " |\n"; echo "+" . str_repeat('-', $maxWidthVocCode + 3) . "+" . str_repeat('-', $maxWidthVocMinSpend + 4) . "+" . str_repeat('-', $maxWidthDiscount + 4) . "+" . str_repeat('-', $maxWidthDiscountCap + 3) . "+\n"; // Display the randomly selected voucher data echo "| " . str_pad($voucher_code, $maxWidthVocCode) . " | " . str_pad($min_spend, $maxWidthVocMinSpend) . " | " . str_pad($discount_percentage, $maxWidthDiscount) . " | " . str_pad($discount_cap, $maxWidthDiscountCap) . " |\n"; echo "+" . str_repeat('-', $maxWidthVocCode + 3) . "+" . str_repeat('-', $maxWidthVocMinSpend + 4) . "+" . str_repeat('-', $maxWidthDiscount + 4) . "+" . str_repeat('-', $maxWidthDiscountCap + 3) . "+\n"; // Add your logic for using $voucherData as needed } else { echo "TIDAK DITEMUKAN DATA VOUCHER!! SILAHKAN RUN ULANG ATAU CEK LIVE ANDA!!\n"; } // Add the following code to capture the randomly selected data if (isset($voucherData)) { $encListVoc = json_encode($voucherData); $apiUrl = "https://live.shopee.co.id/api/v1/session/" . $sessionId . '/voucher/show'; $requestData = array( 'voucher' => $encListVoc, 'identifier' => array( 'voucher_code' => $voucher_code, 'promotion_id' => $promotionId, 'signature' => $signature ) ); $options = [ 'http' => [ 'header' => [ 'User-Agent: ShopeeID/3.15.24 (com.beeasy.shopee.id; build:3.15.24; iOS 16.7.2) Alamofire/5.0.5 language=id app_type=1', 'Content-Type: application/json', 'Cookie: ' . $cookies, ], 'method' => 'POST', 'content' => json_encode($requestData) ], ]; $context = stream_context_create($options); $response = file_get_contents($apiUrl, false, $context); $showVocStat = json_decode($response, true); if ($showVocStat === null) { echo logger('ERROR: Gagal melakukan decoding JSON'); } else { if (isset($showVocStat['err_msg'])) { $showVoc = $showVocStat['err_msg']; echo logger("MENAMPILKAN VOUCHER CODE: $voucher_code"); echo logger("STATUS: " . strtoupper($showVoc)); } else { echo logger('ERROR: Key "err_msg" tidak ditemukan dalam hasil JSON'); } } } // Membuat string pesan } else { echo "TIDAK DITEMUKAN DATA VOUCHER!! SILAHKAN RUN ULANG ATAU CEK LIVE ANDA!!\n"; } } function getSales() { global $cookies, $sessionId, $totalRevenue; $urlData = "https://creator.shopee.co.id/supply/api/lm/sellercenter/realtime/dashboard/productList?sessionId=$sessionId&productName=&productListTimeRange=0&productListOrderBy=productClicks&sort=desc&page=1&pageSize=100"; $headers = [ 'authority' => 'creator.shopee.co.id', 'accept' => 'application/json', 'accept-language' => 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7', 'content-type' => 'application/json', 'cookie' => $cookies, 'language' => 'en', 'sec-ch-ua' => '"Not_A Brand";v="8", "Chromium";v="120", "Google Chrome";v="120"', 'sec-ch-ua-mobile' => '?0', 'sec-ch-ua-platform' => '"Windows"', 'sec-fetch-dest' => 'empty', 'sec-fetch-mode' => 'cors', 'sec-fetch-site' => 'same-origin', 'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36', 'x-env' => 'live', 'x-region' => 'id', 'x-region-domain' => 'co.id', 'x-region-timezone' => '+0700', ]; $options = [ 'http' => [ 'header' => implode("\r" . PHP_EOL, array_map(function ($key, $value) { return "$key: $value"; }, array_keys($headers), $headers)), ], ]; $context = stream_context_create($options); $response = file_get_contents($urlData, false, $context); $resultArray = json_decode($response, true); $totalRevenue = 0; $totalSold = 0; // Check if there is data in the JSON if ($resultArray && isset($resultArray['data']['list']) && count($resultArray['data']['list']) > 0) { echo logger("MENGAMBIL DATA PENJUALAN..."); sleep(2); // Initialize arrays to store maximum column widths $maxWidthNamaBarang = strlen('NAMA BARANG'); $maxWidthPendapatan = strlen('PENDAPATAN'); $maxWidthTerjual = strlen('TERJUAL'); foreach ($resultArray['data']['list'] as $voucherData) { $pendapatan = $voucherData['revenue']; $terjual = $voucherData['itemSold']; // Check if revenue and itemSold are not equal to 0 if ($pendapatan != 0 && $terjual != 0) { // Limit the length of the namaBarang to a maximum of 25 characters $namaBarang = substr($voucherData['title'], 0, 35); // Update maximum column widths $maxWidthNamaBarang = max($maxWidthNamaBarang, strlen($namaBarang)); $maxWidthPendapatan = max($maxWidthPendapatan, strlen(number_format($pendapatan, 0, ',', '.'))); $maxWidthTerjual = max($maxWidthTerjual, strlen($terjual)); } } // Create a dynamic table header based on maximum column widths echo "+" . str_repeat('-', $maxWidthNamaBarang + 3) . "+" . str_repeat('-', $maxWidthPendapatan + 3) . "+" . str_repeat('-', $maxWidthTerjual + 3) . "+\n"; echo "| " . str_pad('NAMA BARANG', $maxWidthNamaBarang) . " | " . str_pad('PENDAPATAN', $maxWidthPendapatan) . " | " . str_pad('TERJUAL', $maxWidthTerjual) . " |\n"; echo "+" . str_repeat('-', $maxWidthNamaBarang + 3) . "+" . str_repeat('-', $maxWidthPendapatan + 3) . "+" . str_repeat('-', $maxWidthTerjual + 3) . "+\n"; foreach ($resultArray['data']['list'] as $voucherData) { $pendapatan = $voucherData['revenue']; $terjual = $voucherData['itemSold']; // Check if revenue and itemSold are not equal to 0 if ($pendapatan != 0 && $terjual != 0) { // Limit the length of the namaBarang to a maximum of 25 characters $namaBarang = substr($voucherData['title'], 0, 35); // Display data in a table row echo "| " . str_pad($namaBarang, $maxWidthNamaBarang) . " | Rp " . str_pad(number_format($pendapatan, 0, ',', '.'), $maxWidthPendapatan) . " | " . str_pad($terjual, $maxWidthTerjual) . " |\n"; // Add revenue to totalRevenue $totalRevenue += $pendapatan; $totalSold += $terjual; } } // Display the table footer echo "+" . str_repeat('-', $maxWidthNamaBarang + 3) . "+" . str_repeat('-', $maxWidthPendapatan + 3) . "+" . str_repeat('-', $maxWidthTerjual + 3) . "+\n"; // Display total revenue echo logger("ITEM TERJUAL: " . number_format($totalSold) . ""); echo logger("TOTAL PENJUAAN: Rp " . number_format($totalRevenue, 0, ',', '.') . "\n"); // Membuat string pesan } else { echo "TIDAK DITEMUKAN DATA PENJUALAN!! SILAHKAN RUN ULANG ATAU CEK LIVE ANDA!!\n"; } } function viewCookieLines() { $line = file_get_contents('https://api-shopee.mas.mba/cookieBanyak.txt'); $cookies = explode(PHP_EOL, $line); if (!$cookies) { echo "Error reading cookies file.\n"; return; } echo "COOKIE YANG TERSEDIA SAAT INI: " . count($cookies) . " AKUN\n"; } function randomSleep($min, $max) { $rand = rand($min, $max); echo "[!] " . date("H:i:s") . " Sleeping $rand detik...\n"; sleep($rand); } function api($url) { $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET'); curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate'); $resultApi = curl_exec($ch); curl_close($ch); return $resultApi; } function logger($message) { echo "[" . date('H:i:s') . "] $message\n"; } function readBannedWordsFromFile($filePath) { try { $bannedWords = explode(PHP_EOL . "", file_get_contents($filePath)); // Menghapus string kosong atau yang hanya terdiri dari spasi dari $bannedWords $bannedWords = array_filter($bannedWords, function ($word) { return trim($word) !== ''; }); $bannedWords = array_map('trim', $bannedWords); return $bannedWords; } catch (Exception $error) { error_log('ERROR!! GAGAL MEMBACA DATA BANNED DARI FILE: ' . $error->getMessage()); return []; } } function readKeyFromFile($filePath) { try { $cookies = file_get_contents($filePath); return trim($cookies); } catch (Exception $error) { error_log('ERROR!! GAGAL MEMBACA DATA KEY DARI FILE: ' . $error->getMessage()); return null; } } function containsBannedWords($content) { global $bannedWords; $lowerContent = strtolower($content); return array_reduce($bannedWords, function ($carry, $word) use ($lowerContent) { return $carry || strpos($lowerContent, strtolower($word)) !== false; }, false); } function readCookiesFromFile($filePath) { try { $cookies = file_get_contents($filePath); return trim($cookies); } catch (Exception $error) { error_log('ERROR!! GAGAL MEMBACA DATA COOKIE DARI FILE: ' . $error->getMessage()); return null; } }